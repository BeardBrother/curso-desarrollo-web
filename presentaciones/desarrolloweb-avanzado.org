#+TITLE: Desarrollo Web avanzado
#+AUTHOR: Patricio Martínez
#+EMAIL: maxxcan@gmail.com
#+DATE: <2018-04-15 dom>




* Introducción

Imaginemos que llevamos mucho tiempo programando *páginas web*. 

Con el tiempo seguramente tendremos una metodología propia para crear las páginas webs, así como una o varias plantillas de páginas.

Puede que además tengamos nuestras librerías propias o de terceros para crear y conectarnos a las bases de datos que necesitamos para
nuestra página web. 

* Css avanzado

Además de lo conocido sobre CSS a día de hoy hay muchas tecnologías que ha permitido acercar más el CSS a la programación que aún lenguaje de marcado. 

Hablamos de los pre-procesadores y como ejemplo tenemos:

- [[http://sass-lang.com/][Sass]]
- [[http://lesscss.org/][Less]]
- [[http://stylus-lang.com/][Stylus]] 

* Bases de datos

Lo normal cuando una página web se complica es que tengamos que acceder o escribir una gran cantidad de datos. 

La mejor forma de trabajar con esos datos es a través de *gestores de bases de datos*. Si esas bases de datos son *relacionales*, entonces tendremos que trabajar con el 
lenguaje *SQL*. tanto para crear, guardar y gestionar esos datos. 

Si nos queremos ahorrar tener que saber SQL o al menos no tener que conocerlo en profundidad puede que nos interese usar librerías que facilitan ese trabajo.

Las bases de datos más comunes son:

Relacionales:

- *Mysql* 
- *MariaDB* 
- *Postgresql* 
- *Oracle* 


* Automatización de procesos

Algo normal con el tiempo para cualquier programador sería el hecho de ir automatizando tareas que hacemos de forma repetida. 

Las automatizaciones pueden ser: 

- Gestionar las bases de datos
- Gestionar Test Unitarios
- Creación de formularios 
- etc 


* Motores de plantillas Web 

Una forma de automatizar el desarrollo de web es el de integrar aún más la creación de contenido html y/o css junto con el lenguaje de programación
que estemos usando para automatizar nuestro trabajo. 

Para realizar esto existe una tecnología llamada *Motores de plantillas web*. Éstos permiten separar por un lado el trabajo del diseñador y por otro el del desarrollador para crear documentos web.

#+ATTR_LATEX: :float wrap :width 250px :center
[[./img/tempwebengine.png]] 


* Gestores de paquetes 

Otra forma de automatizar es la de tener un gestor de las librerías que usamos. Este gestor puede cumplir dos funciones

1. La de descargar de internet si usamos librerías de código abierto, aquellas que necesitemos. 
2. Poder crear un fichero con el listado de todas las librerías que estamos usando en nuestro proyecto.

Algunos gestores conocidos de librerías son: 

- NPM (nodejs)
- Bower
- Yarn
- RubyGems 

* Estructura de directorios y plantillas

Finalmente una buena idea sería tener una serie de plantillas y árbol de directorio o estructura ya estandarizada ya que es la que usaremos en la mayor parte de nuestros
proyectos. Resulta que en Internet hay muchas plantillas y estructuras ya creadas y licenciadas como open source en sitios como Github y otros *repositorios*. 

Existen además programas que nos descargan esas plantillas y nos construyen esas estructuras de directorios. Por ejemplo, tenemos a:

- Gulp.js
- Grunt 
- Webpack
- etc 

* Programas que hacen todo lo anterior


Y luego tenemos programas que andan un poco entre lo uno y lo otro o hace ambas cosas. Estos programas dependen o se usan en muchos *frameworks* y cada framework tiene el suyo.

- Yeomna 
- Leining
- Boot 
- PHPcomposer
- etc

* Frameworks(I)
** Historia de los frameworks

#+ATTR_LATEX: :width 200px
[[./img/historia-de-los-frameworks1.png]]

** Historia de los frameworks 

#+ATTR_LATEX: :width 200px
[[./img/historia-de-los-frameworks2.png]]
* Frameworks(II)
** Qué es un framework 

Un framework podemos definirla como una estructura o *marco de trabajo* en la que estandarizamos unos *conceptos*, *prácticas* y *criterios* para enfocar un tipo de problema. 

Entre otras cosas un software tiene:

- Programas
- Bibliotecas
- Lenguaje interpretado

Los mejores frameworks en Javascript
*** Angular2
*** React
*** Vuejs
    

[[https://en.wikipedia.org/wiki/Comparison_of_web_frameworks][Comparación entre los distintos frameworks web]]
